plugins {
    id 'org.springframework.boot' version "${springboot_version}"
    id 'java'
    id 'checkstyle'
    id "org.jetbrains.kotlin.jvm" version "${kotlin_version}"
    id "io.gitlab.arturbosch.detekt" version "${detekt_version}"
    id "org.owasp.dependencycheck" version "${owaspVersion}"
}

group = 'com.exactpro.th2'
version = release_version

apply plugin: 'distribution'

repositories {
    mavenCentral()
}

configurations.configureEach {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude group: 'org.springframework.boot', module: 'logback-classic'
}

repositories {
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }

    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }
}

checkstyle {
    toolVersion = "10.7.0"
}

detekt {
    buildUponDefaultConfig = true
    autoCorrect = true
    config = files("$rootDir/config/detekt/detekt.yml")
}

ext {
    fabric8_version = '6.6.2'
    infra_repo_version = '1.2.4'
    schema_validator_version = '1.6.7'
    jackson_version = '2.14.2'
    zip4j_version = '2.11.5'
    commons_text_version = '1.10.0'
    rxjava_version = '1.3.8'
    slf4j_api_version = '2.0.5'
    log4j_slf4j_impl_version = '2.20.0'
    log4j_slf4j_core_version = '2.19.0'
    kotlin_logging_version = '2.0.10'
    prometheus_version = '0.16.0'
    jupiter_version = '5.9.2'
    guava_version = '32.0.1-jre'
    snakeyaml_version = '2.0'
}

configurations.configureEach() {
    resolutionStrategy {
        force "com.google.guava:guava:$guava_version"
        force "org.yaml:snakeyaml:$snakeyaml_version"
    }
}

dependencies {
    implementation platform("org.springframework.boot:spring-boot-dependencies:${springboot_version}")
    implementation "org.springframework.boot:spring-boot-starter-security:${springboot_version}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springboot_version}"

    implementation "com.exactpro.th2:infra-repo:${infra_repo_version}"

    implementation "com.exactpro.th2:schema-validator:${schema_validator_version}"

    implementation "io.fabric8:kubernetes-client:${fabric8_version}"

    implementation "net.lingala.zip4j:zip4j:${zip4j_version}"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jackson_version}"
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: "${jackson_version}"
    implementation "org.apache.commons:commons-text:${commons_text_version}"
    implementation "io.reactivex:rxjava:${rxjava_version}"

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "org.slf4j:slf4j-api:${slf4j_api_version}"
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4j_slf4j_impl_version}"
    implementation "org.apache.logging.log4j:log4j-core:${log4j_slf4j_impl_version}"
    implementation group: 'io.github.microutils', name: 'kotlin-logging', version: kotlin_logging_version


    implementation "io.prometheus:simpleclient:${prometheus_version}"
    implementation "io.prometheus:simpleclient_httpserver:${prometheus_version}"
    implementation "io.prometheus:simpleclient_hotspot:${prometheus_version}"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api:${jupiter_version}")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:${jupiter_version}")

    detektPlugins("io.gitlab.arturbosch.detekt:detekt-formatting:${detekt_version}")
}

dependencyCheck {
    formats=['SARIF', 'JSON', 'HTML']
    failBuildOnCVSS=5

    analyzers {
        assemblyEnabled = false
        nugetconfEnabled = false
        nodeEnabled = false
    }
}

bootJar {
    exclude('log4j.properties')
}

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(17)
}

jar {
    enabled = false
}

bootJar{
    manifest {
        attributes(
                'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title': '',
                'Specification-Vendor': 'Exactpro Systems LLC',
                'Implementation-Title': project.archivesBaseName,
                'Implementation-Vendor': 'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version': project.version
        )
    }
}
